parameters:
  - name: serviceConnection
    type: string
    default: ''
  - name: containerRegistryName
    type: string
    default: ''
  - name: appName
    type: string
    default: 'annex-vii'
  - name: appNameTag
    type: string
    default: 'annex_vii'
  - name: valuesFilePath
    type: string
    default: ''
  - name: appInsightsConnectionString
    type: string
    default: ''

steps:
  - template: release.yaml
    parameters:
      serviceConnection: ${{ parameters.serviceConnection }}
      containerRegistryName: ${{ parameters.containerRegistryName }}
      appName: ${{ parameters.appName }}
      appNameTag: ${{ parameters.appNameTag }}

  - bash: |
      if [ $CHART_EXISTS == 'false' ]
      then
        echo "Installing release: ${PROJECT_NAME}"
        chartFullName="${HOST}/${PROJECT_NAME}"
        helm upgrade \
          --install $PROJECT_NAME \
          $chartFullName \
          --version $CHART_TAG \
          --create-namespace \
          -n $PROJECT_NAME \
          -f $VALUES_FILE_PATH \
          --set secret.env.APPINSIGHTS_CONNECTION_STRING=$APPINSIGHTS_CONNECTION_STRING
      else
        echo "Release: ${PROJECT_NAME} is already up to date"
      fi
    displayName: AKS Deploy ${{ parameters.appName }}
    env:
      AAD_SERVICE_PRINCIPAL_CLIENT_ID: $(spnClientId)
      AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: $(spnClientSecret)
      HOST: oci://$(acr.loginServer)/charts/wts
      PROJECT_NAME: ${{ parameters.appName }}
      CHART_TAG: $(repository_${{ parameters.appNameTag }}.chartTag)
      VALUES_FILE_PATH: ${{ parameters.valuesFilePath }}
      APPINSIGHTS_CONNECTION_STRING: ${{ parameters.appInsightsConnectionString }}
      CHART_EXISTS: $(release_${{ parameters.appNameTag }}.exists)
