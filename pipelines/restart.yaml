trigger:
  - none

pool: DEFRA-COMMON-ubuntu2004-SSV3

parameters:
  - name: environment
    default: 'DEV'
    values:
      - SND
      - DEV
      - TST
      - PRE
      - PRD
  - name: appName
    type: string
    default: api-waste-tracking-gateway
    values:
      - api-waste-tracking-gateway
      - app-green-list-waste-export
      - app-uk-waste-movements
      - app-waste-tracking-service
      - service-address
      - service-green-list-waste-export
      - service-green-list-waste-export-bulk
      - service-feedback
      - service-limited-audience
      - service-reference-data

jobs:
  - deployment: restart_deployments
    displayName: Restart AKS Deployment
    environment: ${{ parameters.environment }}-Apps

    variables:
      - name: serviceConnection
        ${{ if in(parameters.environment, 'SND', 'DEV', 'TST') }}:
          value: AZD-WTS-${{ parameters.environment }}1
        ${{ if in(parameters.environment, 'PRE', 'PRD') }}:
          value: AZR-WTS-${{ parameters.environment }}1
      - name: aksName
        value: ${{ parameters.environment }}WTSINFAKS1401
      - name: resourceGroupName
        value: ${{ parameters.environment }}WTSINFRGP1401

    strategy:
      runOnce:
        deploy:
          steps:
            - template: templates/auth/aks.yaml
              parameters:
                serviceConnection: ${{ variables.serviceConnection }}
                aksName: ${{ variables.aksName }}
                resourceGroupName: ${{ variables.resourceGroupName }}

            - bash: |
                echo "Restarting deployment: $APP_NAME"
                kubectl rollout restart deployment \
                  $APP_NAME \
                  -n $APP_NAME
              displayName: AKS Restart Deployment
              env:
                AAD_SERVICE_PRINCIPAL_CLIENT_ID: $(spnClientId)
                AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: $(spnClientSecret)
                APP_NAME: ${{ parameters.appName }}
