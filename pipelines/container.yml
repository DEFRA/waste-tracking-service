trigger:
  - none

pool:
  vmImage: ubuntu-latest

variables:
  BRANCH_NAME: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
  IMAGE_NAME: sndwtshubcr3401.azurecr.io/demo:1.0
  RG_NAME: SNDWTSAKSRG2401
  AKS_NAME: SNDWTSSPKKS2401
  ACR_NAME: SNDWTSHUBCR3401

steps:
  - task: AzureCLI@1
    displayName: Login to ACR
    inputs:
      connectedServiceNameARM: 'AZD-WTS-SND1'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az acr login -n $(ACR_NAME)
  - script: |
      npm ci
    displayName: 'npm ci'
  - script: |
      npx nx container waste-tracking-service
    displayName: 'nx container waste-tracking-service'
  - script: |
      docker image tag docker.io/wts/waste-tracking-service:$(BRANCH_NAME) $(IMAGE_NAME)
      docker image push $(IMAGE_NAME)
    displayName: Docker list, tag and push
  - task: AzureCLI@1
    displayName: Deploy to AKS
    inputs:
      connectedServiceNameARM: 'AZD-WTS-SND1'
      scriptLocation: 'inlineScript'
      addSpnToEnvironment: true
      inlineScript: |
        az ad sp show --id $servicePrincipalId --query "id"
        sudo az aks install-cli
        az aks get-credentials -n $(AKS_NAME) -g $(RG_NAME)
        export KUBECONFIG=/home/vsts/.kube/config
        kubelogin convert-kubeconfig -l spn
        export AAD_SERVICE_PRINCIPAL_CLIENT_ID=$servicePrincipalId
        export AAD_SERVICE_PRINCIPAL_CLIENT_SECRET=$servicePrincipalKey
        kubectl get pods
        kubectl get nodes
        kubectl apply -f $(Build.SourcesDirectory)/workload/workload.yaml


