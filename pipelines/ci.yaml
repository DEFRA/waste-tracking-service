trigger:
  - main

pool: DEFRA-COMMON-ubuntu2004-SSV3

parameters:
  - name: manualDeployment
    displayName: Deploy applications manually?
    type: boolean
    default: false

  - name: runAcceptanceTests
    displayName: Run acceptance tests? (only applicable for manual deployments)
    type: boolean
    default: false

  - name: environments
    displayName: Environments and stage dependencies
    type: object
    default:
      - name: 'SND'
        dependsOn:
          - 'build'
      - name: 'DEV'
        dependsOn:
          - 'build'
          - 'SND'
      - name: 'TST'
        dependsOn:
          - 'build'
          - 'DEV'
      - name: 'PRE'
        dependsOn:
          - 'build'
          - 'TST'

stages:
  - stage: build
    displayName: Build

    jobs:
      - template: templates/build-artifacts.yaml

  - ${{ each environment in parameters.environments }}:
      - stage: ${{ environment.name }}
        displayName: ${{ environment.name }}
        ${{ if ne(environment.dependsOn, '') }}:
          dependsOn: ${{ environment.dependsOn }}

        ${{ if eq(parameters.manualDeployment, False) }}:
          condition: and(succeeded(), or(eq(stageDependencies.build.outputs['build_artifacts.publishContainers.affected'], 'true'), eq(stageDependencies.build.outputs['build_artifacts.publishCharts.affected'], 'true')))

        jobs:
          - template: templates/deploy-apps.yaml
            parameters:
              environment: ${{ environment.name }}
              manualDeployment: ${{ parameters.manualDeployment }}

  - stage: test
    displayName: Test

    ${{ if eq(parameters.manualDeployment, False) }}:
      condition: and(succeeded(), or(eq(stageDependencies.build.outputs['build_artifacts.publishContainers.affected'], 'true'), eq(stageDependencies.build.outputs['build_artifacts.publishCharts.affected'], 'true'), eq(stageDependencies.build.outputs['build_artifacts.acceptanceTestsChanges.affected'], 'true')))

    ${{ if eq(parameters.manualDeployment, True) }}:
      condition: and(succeeded(), eq('${{ parameters.runAcceptanceTests }}', true))

    jobs:
      - job: wait
        displayName: Wait for deployment to complete
        steps:
          - bash: |
              echo "Waiting 5 mins for AKS application pods to start running..."
              echo "Start time: $(date +%T)"
              sleep 300
              echo "End time: $(date +%T)"
            displayName: Wait for application to start

      - template: templates/acceptance-tests.yaml
        parameters:
          environment: PRE
          tags: 'not @ignore and not @code_display_issue'
          dependsOn:
            - wait
