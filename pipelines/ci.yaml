trigger:
  - main

jobs:
  - job: build
    displayName: Create artifacts

    variables:
      - name: serviceConnection
        value: AZD-WTS-SND1
      - name: branch
        value: origin/main
      - name: containerRegistryName
        value: SNDWTSHUBCR3401

    steps:
      - checkout: self
        fetchDepth: 0

      - task: AzureCLI@2
        name: acr
        displayName: ACR login
        inputs:
          azureSubscription: ${{ variables.serviceConnection }}
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            response=$(az acr login --expose-token)
            echo "##vso[task.setvariable variable=loginServer;isoutput=true]$( \
              echo $response | jq -r .loginServer \
            )"
            echo "##vso[task.setvariable variable=accessToken;isoutput=true;issecret=true]$( \
              echo $response | jq -r .accessToken \
            )"
        env:
          AZURE_DEFAULTS_ACR: $(containerRegistryName)

      - task: Npm@1
        displayName: Install packages
        inputs:
          command: ci

      - bash: |
          echo $PASSWORD \
            | docker login $LOGIN_SERVER \
              --username $USERNAME \
              --password-stdin
        displayName: Docker login
        env:
          USERNAME: 00000000-0000-0000-0000-000000000000
          PASSWORD: $(acr.accessToken)
          LOGIN_SERVER: $(acr.loginServer)

      - bash: |
          echo "Recreating affected artifacts ${NX_HEAD} -> ${NX_BASE}..."
          affected=$(npx nx print-affected --type=app --select=projects)
          export INPUT_PUSH=true
          for project in ${affected//,/}
          do
            export INPUT_IMAGES="${REGISTRY}/wts/${project}"
            npx nx container $project
          done
        displayName: Publish containers
        failOnStderr: true
        env:
          NX_BASE: $(branch)~1
          NX_HEAD: $(branch)
          REGISTRY: $(acr.loginServer)

      - bash: |
          echo $PASSWORD \
            | helm registry login $LOGIN_SERVER \
                --username $USERNAME \
                --password-stdin
        displayName: Helm registry login
        env:
          USERNAME: 00000000-0000-0000-0000-000000000000
          PASSWORD: $(acr.accessToken)
          LOGIN_SERVER: $(acr.loginServer)

      - bash: |
          affected=$(
            git diff --name-only $(branch) $(branch)~1 \
              | grep -Po "(?<=^cluster\/charts\/)[a-z-]+(?=\/)" \
              | uniq
          )
          version="0.1.0-$(Build.SourceBranchName).$(git rev-parse --short HEAD)"
          for project in ${affected}
          do
            helm package ./cluster/charts/${project} \
              --version ${version} \
              --destination $(Build.StagingDirectory)
            helm push \
              $(Build.StagingDirectory)/${project}-${version}.tgz \
              $HOST
          done
        displayName: Publish charts
        env:
          HOST: oci://$(acr.loginServer)/charts/wts

  - job: test
    displayName: Acceptance tests

    variables:
      - name: wasteTrackingServiceRootUrl
        value: 'http://52.151.120.75/'

    steps:
      - task: UseRubyVersion@0
        inputs:
          versionSpec: '>= 3.0'

      - bash: |
          gem install bundler
          bundle install
          bundle exec cucumber --profile ci
        displayName: Run tests
        env:
          START_PAGE_URL: $(wasteTrackingServiceRootUrl)
        workingDirectory: tests/waste-tracking-service

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: tests/waste-tracking-service/junit/*.xml
        condition: always()
