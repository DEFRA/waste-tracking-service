apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment
spec:
  selector:
    matchLabels:
      app: example-deployment
  template:
    metadata:
      labels:
        app: example-deployment
    spec:
      containers:
      - name: example-deployment
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        env:
        - name: TITLE
          value: "AKS Ingress Demo"

---
apiVersion: v1
kind: Service
metadata:
  name: example-svc
spec:
  selector:
    app: example-svc
  ports:
  - port: 8080
    targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment-2
spec:
  selector:
    matchLabels:
      app: example-deployment-2
  template:
    metadata:
      labels:
        app: example-deployment-2
    spec:
      containers:
      - name: example-deployment-2
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        env:
        - name: TITLE
          value: "AKS Ingress Demo 2"
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-resource-group: SNDWTSAKSRG1401
  name: example-svc-lb
spec:
  selector:
    app: example-svc-lb
  ports:
  - port: 8081
    targetPort: 80
  type: LoadBalancer
  loadBalancerIP: 20.254.63.160

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
  labels:
    name: example-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  defaultBackend:
    service:
      name: example-service
      port:
        number: 8080
  rules:
  - host: "mysub.mydomain.com"
    http:
      paths:
      - pathType: Prefix
        path: "/hello-world-one"
        backend:
          service:
            name: example-service
            port: 
              number: 8080