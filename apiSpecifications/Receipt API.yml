openapi: '3.0.3'
info:
  title: Digital Waste Tracking Receipt API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /movements:
    post:
      description: Endpoint to be used when waste is received but the carrier has not already recorded the waste movement so has no id.
      requestBody:
        $ref: '#/components/requestBodies/createMovementRequest'
      responses:
        '200':
          description: The waste movement has been stored.  If we have any async processing to do upon receipt (such as verifying permits etc) this should change to a 202.
          content:
            application/json:
              schema:
                type: object
                properties:
                  carrierMovementId:
                    type: string
                    description: An identifier of the movement, unique for the carrier only.
                                 This field will only be returned if the carrier is known to the service and should be provided to the carrier by the receiver.
                  globalMovementId:
                    type: string
                    format: uuid
                    description: Globally unique identifier of the movement. This id should be stored and used for any subsequent updates of the movement.
        '400':
          $ref: '#/components/responses/400'
  /carriers/{carrierId}/movements/{carrierMovementId}/receive:
    post:
      description: Endpoint to be used when waste is recieved and the carrier has a waste tracking id.
      parameters:
        - name: carrierId
          in: path
          required: true
          description: The identifier of the carrier.  Will this be an ID from the service, a permit id or something else?
          schema:
            type: string
        - name: carrierMovementId
          in: path
          required: true
          description: An identifier of the movement, unique for the carrier only.
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/createMovementRequest'
      responses:
        '200':
          description: The waste movement receipt has been processed. If we have any async processing to do upon receipt (such as verifying permits etc) this should change to a 202.
          content:
            application/json:
              schema:
                type: object
                properties:
                  globalMovementId:
                    type: string
                    format: uuid
                    description: Globally unique identifier of the movement.
        '400':
          $ref: '#/components/responses/400'
        '404':
          description: Carrier or movement not found.
                       The details will still be stored in the Waste Tracking Service, the response is to inform the receiver that the carrier has provided incorrect details.
  
  /movements/{movementId}:
    patch:
      description: Endpoint to be used by the reciever to correct details of a movement which has already been created/received.
                   This endpoint should not be used when waste is received.
      parameters:
        - name: movementId
          in: path
          required: true
          description: The globally unique id of the movement.
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/createMovementRequest'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '404':
          description: Movement not found. The details will not be stored in the Waste Tracking Service.

  /movements/{movementId}/hazardous:
    put:
      description: Endpoint used to provide hazardous waste details for a waste movement
      parameters:
        - name: movementId
          in: path
          required: true
          description: The globally unique id of the movement.
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                isHazerdousWaste:
                  type: boolean
                components:
                  type: array
                  items:
                    type: object
                    properties:
                      component:
                        type: string
                      concentration:
                        type: number
                      hazCode:
                        type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '404':
          description: Movement not found. The details will not be stored in the Waste Tracking Service.

  /movements/{movementId}/pops:
    put:
      description: Endpoint used to provide pops details for a waste movement
      parameters:
        - name: movementId
          in: path
          required: true
          description: The globally unique id of the movement.
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hasPops:
                  type: boolean
                concentrationValue:
                  type: number
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '404':
          description: Movement not found. The details will not be stored in the Waste Tracking Service.

  /movements/{movementId}/pepr:
    put:
      description: Endpoint used to provide additional details required for pEPR
      parameters:
        - name: movementId
          in: path
          required: true
          description: The globally unique id of the movement.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '404':
          description: Movement not found. The details will not be stored in the Waste Tracking Service.
          
components:
  requestBodies:
    'createMovementRequest':
      description: Details of the waste movement to be created
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              receiverReference:
                type: string
              specialHandlingRequirements:
                type: string
              waste:
                type: object
                properties:
                  ewcCode:
                    type: string
                  description:
                    type: string
                  form:
                    type: string
                    enum: [Gas, Liquid, Solid, Powder, Sludge, Mixed]
                  containers:
                    type: string
                  quantity:
                    $ref: '#/components/schemas/quantity'
              carrier:
                type: object
                properties:
                  registrationNumber:
                    type: string
                  organisationName:
                    type: string
                  address:
                    type: string
                  emailAddress:
                    type: string
                  companiesHouseNumber:
                    type: string
                  phoneNumber:
                    type: string
                  vehicleRegistration:
                    type: string
                  meansOfTransport:
                    type: string
                    enum: [Road, Rail, Air, Sea, Waterway, Other]                  
              acceptance:
                type: object
                properties:
                  acceptingAll:
                    type: boolean
                  quantityNotAccepted:
                    $ref: '#/components/schemas/quantity'
                  rejectionReason:
                    type: string
              receiver:
                type: object
                properties:
                  authorisationType:
                    type: string
                    enum: [TBD]
                  authorisationNumber:
                    type: string
                  regulatoryPositionStatement:
                    type: string
              receipt:
                type: object
                properties:
                  estimateOrActual:
                    type: string
                    enum: [Estimate, Actual]
                  dateTimeReceived:
                    type: string
                    format: date-time
                  disposalOrRecoveryCodes:
                    type: array
                    items:
                      $ref: '#/components/schemas/disposalOrRecoveryCode'
  schemas:
    disposalOrRecoveryCode:
      type: object
      properties:
        code:
          type: string
        quantity:
          $ref: '#/components/schemas/quantity'
    quantity:
      type: object
      properties:
        metric:
          type: string
          enum: [Tonnes]
        amount:
          type: number
        isEstimate:
          type: boolean
  responses:
    '400':
      description: Input was not in the correct format.
