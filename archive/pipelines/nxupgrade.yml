schedules:
  - cron: '0 0 * * 1' # Run every Monday at midnight (UTC)
    displayName: Weekly nx migrate weekly
    branches:
      include:
        - self
    always: true
trigger:
  - none
pr:
  - none
pool: DEFRA-COMMON-ubuntu2004-SSV3

stages:
  - stage: UpgradeNx
    displayName: upgrade nx packages version
    jobs:
      - job: UpgradeNxPackagesVersion
        displayName: upgrade nx packages version
        steps:
          - checkout: self
            clean: true
            displayName: pull from self
            persistCredentials: true

          - script: |
              git config --global user.name "$(BatchUserName)"
              git config --global user.email "$(BatchUserEmail)"
              git rev-parse --abbrev-ref HEAD
              git fetch origin           
              git status
              git checkout -b $(WorkingBranchName)
            displayName: checkout branch
            workingDirectory: $(System.DefaultWorkingDirectory)

          - script: |
              npm install
            displayName: install packages with npm
            workingDirectory: $(System.DefaultWorkingDirectory)
            condition: succeeded()

          - script: |
              npx nx migrate latest
              if [ -f $(Build.SourcesDirectory)/migrations.json ]; then
                echo "##vso[task.setvariable variable=MigrationsFileExists]true"
              else
                echo "##vso[task.setvariable variable=MigrationsFileExists]false"
              fi
            displayName: create migrations.json file if migrations are required
            workingDirectory: $(System.DefaultWorkingDirectory)
            condition: succeeded()

          - script: |
              npx nx migrate --run-migrations
            condition: |
              and(eq(variables['MigrationsFileExists'], 'true'), succeeded())
            displayName: apply migrations if migrations file exists
            workingDirectory: $(System.DefaultWorkingDirectory)

          - script: |
              npm audit fix --force
            displayName: audit for security package vulnerabilities
            condition: |
              and(eq(variables['MigrationsFileExists'], 'true'), succeeded())
            workingDirectory: $(System.DefaultWorkingDirectory)

          - script: |
              npx nx run-many -t build --all
            displayName: rebuild all projects
            condition: |
              and(eq(variables['MigrationsFileExists'], 'true'), succeeded())
            workingDirectory: $(System.DefaultWorkingDirectory)

          - script: |
              git add . -A
              git commit -m "chore: run mx migrate for @nx/workspace $NX_VERSION / Build Number: $(Build.BuildNumber)"
              git push --set-upstream origin $(WorkingBranchName)
            displayName: commit migration and push to origin
            workingDirectory: $(System.DefaultWorkingDirectory)
            condition: |
              and(eq(variables['MigrationsFileExists'], 'true'), succeeded())
