/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/agreements': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Search agreements for recurring payments
     * @description You can use this endpoint to search for recurring payments agreements. The agreements are sorted by date, with the most recently-created agreements appearing first.
     */
    get: operations['Search agreements'];
    put?: never;
    /**
     * Create an agreement for recurring payments
     * @description You can use this endpoint to create a new agreement.
     */
    post: operations['Create an agreement'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/agreements/{agreementId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get information about a single agreement for recurring payments
     * @description You can use this endpoint to get information about a single recurring payments agreement.
     */
    get: operations['Get an agreement'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/agreements/{agreementId}/cancel': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Cancel an agreement for recurring payments
     * @description You can use this endpoint to cancel a recurring payments agreement in the `active` status.
     */
    post: operations['Cancel an agreement'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/auth': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Send card details to authorise a MOTO payment
     * @description You can use this endpoint to [authorise payments](https://docs.payments.service.gov.uk/moto_payments/moto_send_card_details_api/) you have created with `authorisation_mode` set to `moto_api`.
     */
    post: operations['Authorise a MOTO payment'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/disputes': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Search disputes
     * @description You can use this endpoint to search disputes. A dispute is when [a paying user challenges a completed payment through their bank](https://docs.payments.service.gov.uk/disputes/).
     */
    get: operations['Search disputes'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/payments': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Search payments
     * @description You can use this endpoint to [search for payments you’ve previously created](https://docs.payments.service.gov.uk/reporting/#search-payments/). Payments are sorted by date, with the most recently-created payment appearing first.
     */
    get: operations['Search payments'];
    put?: never;
    /**
     * Create a payment
     * @description You can use this endpoint to [create a new payment](https://docs.payments.service.gov.uk/making_payments/).
     */
    post: operations['Create a payment'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/payments/{paymentId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get information about a single payment
     * @description You can use this endpoint to [get details about a single payment you’ve previously created](https://docs.payments.service.gov.uk/reporting/#get-information-about-a-single-payment).
     */
    get: operations['Get a payment'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/payments/{paymentId}/cancel': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Cancel payment
     * @description You can use this endpoint [to cancel an unfinished payment](https://docs.payments.service.gov.uk/making_payments/#cancel-a-payment-that-s-in-progress).
     */
    post: operations['Cancel a payment'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/payments/{paymentId}/capture': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Take a delayed payment
     * @description You can use this endpoint to [take (‘capture’) a delayed payment from the paying user’s bank account](https://docs.payments.service.gov.uk/delayed_capture/).
     */
    post: operations['Capture a payment'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/payments/{paymentId}/events': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get a payment's events
     * @description You can use this endpoint to [get a list of a payment’s events](https://docs.payments.service.gov.uk/reporting/#get-a-payment-s-events). A payment event is when a payment’s `state` changes, such as when the payment is created, or when the paying user submits their details.
     */
    get: operations['Get events for a payment'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/payments/{paymentId}/refunds': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get information about a payment’s refunds
     * @description You can use this endpoint to [get a list of refunds for a payment](https://docs.payments.service.gov.uk/refunding_payments/#get-all-refunds-for-a-single-payment).
     */
    get: operations['Get all refunds for a payment'];
    put?: never;
    /**
     * Refund a payment
     * @description You can use this endpoint to [fully or partially refund a payment](https://docs.payments.service.gov.uk/refunding_payments).
     */
    post: operations['Submit a refund for a payment'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/payments/{paymentId}/refunds/{refundId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Check the status of a refund
     * @description You can use this endpoint to [get details about an individual refund](https://docs.payments.service.gov.uk/refunding_payments/#checking-the-status-of-a-refund).
     */
    get: operations['Get a payment refund'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/refunds': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Search refunds
     * @description You can use this endpoint to [search refunds you’ve previously created](https://docs.payments.service.gov.uk/refunding_payments/#searching-refunds). The refunds are sorted by date, with the most recently created refunds appearing first.
     */
    get: operations['Search refunds'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** @description A structure representing the billing address of a card */
    Address: {
      /**
       * @description The paying user's city.
       * @example address city
       */
      city?: string;
      /**
       * @description The paying user’s country, displayed as a 2-character ISO-3166-1-alpha-2 code.
       * @example GB
       */
      country?: string;
      /**
       * @description The first line of the paying user’s address.
       * @example address line 1
       */
      line1?: string;
      /**
       * @description The second line of the paying user’s address.
       * @example address line 2
       */
      line2?: string;
      /**
       * @description The paying user's postcode.
       * @example AB1 2CD
       */
      postcode?: string;
    };
    /** @description Contains information about a user's agreement for recurring payments. An agreement represents an understanding between you and your paying user that you'll use their card to make ongoing payments for a service. */
    Agreement: {
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this agreement when you created it.
       * @example cgc1ocvh0pt9fqs0ma67r42l58
       */
      agreement_id?: string;
      /**
       * @description The date and time this agreement was cancelled. This value uses Coordinated Universal Time (UTC) and ISO 8601 format – `YYYY-MM-DDThh:mm:ss.sssZ`.
       * @example 2022-07-08T14:33:00.000Z
       */
      cancelled_date?: string;
      /**
       * @description The date and time you created this agreement. This value uses Coordinated Universal Time (UTC) and ISO 8601 format – `YYYY-MM-DDThh:mm:ss.sssZ`.
       * @example 2022-07-08T14:33:00.000Z
       */
      created_date?: string;
      /**
       * @description The description you sent when creating this agreement.
       * @example Dorset Council 2022/23 council tax subscription.
       */
      description?: string;
      payment_instrument?: components['schemas']['PaymentInstrument'];
      /**
       * @description The reference you sent when creating this agreement.
       * @example CT-22-23-0001
       */
      reference?: string;
      /**
       * @description The status of this agreement. You can [read more about the meanings of each agreement status.](https://docs.payments.service.gov.uk/recurring_payments/#understanding-agreement-status)
       * @enum {string}
       */
      status?: 'created' | 'active' | 'cancelled' | 'inactive';
      /**
       * @description The identifier you sent when creating this agreement. `user_identifier` helps you identify users in your records.
       * @example user-3fb81107-76b7-4910
       */
      user_identifier?: string;
    };
    AgreementSearchResults: {
      _links?: components['schemas']['SearchNavigationLinks'];
      /**
       * Format: int32
       * @description Number of agreements on the current page of search results.
       * @example 20
       */
      count?: number;
      /**
       * Format: int32
       * @description The [page of agreements you’re viewing](https://docs.payments.service.gov.uk/api_reference/#pagination). To view other pages, make this request again using the `page` parameter.
       * @example 1
       */
      page?: number;
      /** @description Contains agreements matching your search criteria. */
      results?: components['schemas']['Agreement'][];
      /**
       * Format: int32
       * @description Total number of agreements matching your search criteria.
       * @example 100
       */
      total?: number;
    };
    /** @description Contains the user's payment information. This information will be sent to the payment service provider to authorise the payment. */
    AuthorisationRequest: {
      /**
       * @description The full card number from the paying user's card.
       * @example 4242424242424242
       */
      card_number: string;
      /**
       * @description The name on the paying user's card.
       * @example J. Citizen
       */
      cardholder_name: string;
      /**
       * @description The card verification code (CVC) or card verification value (CVV) on the paying user's card.
       * @example 123
       */
      cvc: string;
      /**
       * @description The expiry date of the paying user's card. This value must be in `MM/YY` format.
       * @example 09/22
       */
      expiry_date: string;
      /**
       * @description This single use token authorises your request and matches it to a payment. GOV.UK Pay generated the `one_time_token` when the payment was created.
       * @example 12345-edsfr-6789-gtyu
       */
      one_time_token: string;
    };
    /** @description Object containing information about the authentication of the payment. */
    AuthorisationSummary: {
      three_d_secure?: components['schemas']['ThreeDSecure'];
    };
    /** @description A structure representing the payment card */
    CardDetails: {
      billing_address?: components['schemas']['Address'];
      /**
       * @description The brand of card the user paid with.
       * @example Visa
       */
      readonly card_brand?: string;
      /**
       * @description The type of card the user paid with.`null` means your user paid with Google Pay or we did not recognise which type of card they paid with.
       * @example debit
       * @enum {string}
       */
      readonly card_type?: 'debit' | 'credit' | 'null';
      /** @example Mr. Card holder */
      cardholder_name?: string;
      /**
       * @description The expiry date of the card the user paid with in `MM/YY` format.
       * @example 04/24
       */
      readonly expiry_date?: string;
      /** @example 123456 */
      readonly first_digits_card_number?: string;
      /** @example 1234 */
      readonly last_digits_card_number?: string;
      /**
       * @description The digital wallet type that the user paid with
       * @example Apple Pay
       * @enum {string}
       */
      wallet_type?: 'Apple Pay' | 'Google Pay';
    };
    /** @description The Agreement Request Payload */
    CreateAgreementRequest: {
      /**
       * @description A human-readable description of the purpose of the agreement for recurring payments. We’ll show the description to your user when they make their first payment to activate this agreement. Limited to 255 characters.
       * @example Dorset Council 2022/23 council tax subscription.
       */
      description?: string;
      /**
       * @description Associate a reference with this agreement to help you identify it. Limited to 255 characters.
       * @example CT-22-23-0001
       */
      reference?: string;
      /**
       * @description Associate an identifier with the user who will enter into this agreement with your service.user_identifier is not unique – multiple agreements can have identical user_identifier values.You should not include personal data in user_identifier.
       * @example user-3fb81107-76b7-4910
       */
      user_identifier?: string;
    };
    /** @description The create payment request body */
    CreateCardPaymentRequest: {
      /**
       * @description The unique ID GOV.UK Pay automatically associated with a recurring payments agreement. Including `agreement_id` in your request tells the API to take this payment using the card details that are associated with this agreement. `agreement_id` must match an active agreement ID. You must set `authorisation_mode` to `agreement` for the API to accept `agreement_id`.
       * @example abcefghjklmnopqr1234567890
       */
      agreement_id?: string;
      /**
       * Format: int32
       * @description Sets the amount the user will pay, in pence.
       * @example 12000
       */
      amount: number;
      /**
       * @description Sets how you intend to authorise the payment. Defaults to `web`. Payments created with `web` mode follow the [standard GOV.UK Pay payment journey](https://docs.payments.service.gov.uk/payment_flow/). Paying users visit the `next_url` in the response to complete their payment. Payments created with `agreement` mode are authorised with an agreement for recurring payments. If you create an `agreement` payment, you must also send an active `agreement_id`. You must not send `return_url`, `email`, or `prefilled_cardholder_details` or your request will fail. Payments created with `moto_api` mode return an `auth_url_post` object and a `one_time_token`. You can use `auth_url_post` and `one_time_token` to send the paying user’s card details through the API and complete the payment. If you create a `moto_api` payment, do not send a `return_url` in your request.
       * @enum {string}
       */
      authorisation_mode?: 'web' | 'agreement' | 'moto_api';
      /**
       * @description You can use this parameter to [delay taking a payment from the paying user’s bank account](https://docs.payments.service.gov.uk/delayed_capture/#delay-taking-a-payment). For example, you might want to do your own anti-fraud checks on payments, or check that users are eligible for your service. Defaults to `false`.
       * @example false
       */
      delayed_capture?: boolean;
      /**
       * @description A human-readable description of the payment you’re creating. Paying users see this description on the payment pages. Service staff see the description in the GOV.UK Pay admin tool
       * @example New passport application
       */
      description: string;
      /**
       * @description email
       * @example Joe.Bogs@example.org
       */
      email?: string;
      /**
       * @description [Sets the language of the user’s payment page](https://docs.payments.service.gov.uk/optional_features/welsh_language) with an ISO-6391 Alpha-2 code of a supported language.
       * @example en
       * @enum {string}
       */
      language?: 'en' | 'cy';
      metadata?: components['schemas']['ExternalMetadata'];
      /**
       * @description You can use this parameter to [designate a payment as a Mail Order / Telephone Order (MOTO) payment](https://docs.payments.service.gov.uk/moto_payments).
       * @example false
       */
      moto?: boolean;
      prefilled_cardholder_details?: components['schemas']['PrefilledCardholderDetails'];
      /**
       * @description Associate a reference with this payment. `reference` is not unique - multiple payments can have identical `reference` values.
       * @example 12345
       */
      reference: string;
      /**
       * @description The URL [the paying user is directed to after their payment journey on GOV.UK Pay ends](https://docs.payments.service.gov.uk/making_payments/#choose-the-return-url-and-match-your-users-to-payments).
       * @example https://service-name.gov.uk/transactions/12345
       */
      return_url: string;
      /**
       * @description Use this parameter to set up an existing agreement for recurring payments. The `set_up_agreement` value you send must be a valid `agreement_id`.
       * @example abcefghjklmnopqr1234567890
       */
      set_up_agreement?: string;
    };
    CreatePaymentResult: {
      _links?: components['schemas']['PaymentLinks'];
      /**
       * Format: int64
       * @description The amount, in pence, the user has paid or will pay. `amount` will match the value you sent in the request body.
       * @example 1200
       */
      amount?: number;
      card_details?: components['schemas']['CardDetails'];
      /**
       * @description The date you created the payment.
       * @example 2016-01-21T17:15:00.000Z
       */
      created_date?: string;
      /**
       * @description `delayed_capture` is `true` if you’re controlling [when GOV.UK Pay takes (‘captures’) the payment from the paying user’s bank account](https://docs.payments.service.gov.uk/delayed_capture).
       * @example false
       */
      readonly delayed_capture?: boolean;
      /**
       * @description The description you sent in the request body when creating this payment.
       * @example New passport application
       */
      description?: string;
      /**
       * @description The paying user’s email address. The paying user’s email field will be prefilled with this value when they make their payment. `email` does not appear if you did not include it in the request body.
       * @example citizen@example.org
       */
      email?: string;
      /**
       * @description The language of the user’s payment page.
       * @example en
       * @enum {string}
       */
      language?: 'en' | 'cy';
      metadata?: components['schemas']['ExternalMetadata'];
      /**
       * @description Indicates if this payment is a [Mail Order / Telephone Order (MOTO) payment](https://docs.payments.service.gov.uk/moto_payments).
       * @example false
       */
      moto?: boolean;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      payment_id?: string;
      /** @example worldpay */
      payment_provider?: string;
      /**
       * @description The reference number your payment service provider associated with the payment.
       * @example null
       */
      provider_id?: string;
      /**
       * @description The reference number you associated with this payment.
       * @example 12345
       */
      reference?: string;
      refund_summary?: components['schemas']['RefundSummary'];
      /**
       * @description The URL you direct the paying user to after their payment journey on GOV.UK Pay ends.
       * @example https://service-name.gov.uk/transactions/12345
       */
      return_url?: string;
      settlement_summary?: components['schemas']['PaymentSettlementSummary'];
      state?: components['schemas']['PaymentState'];
    };
    /** @description Contains disputes matching your search criteria. */
    DisputeDetailForSearch: {
      _links?: components['schemas']['DisputeLinksForSearch'];
      /**
       * Format: int64
       * @description The disputed amount in pence.
       * @example 1200
       */
      readonly amount?: number;
      /**
       * @description The date and time the user's bank told GOV.UK Pay about this dispute.
       * @example 2022-07-28T16:43:00.000Z
       */
      readonly created_date?: string;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this dispute when the paying user disputed the payment.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      readonly dispute_id?: string;
      /**
       * @description The deadline for submitting your supporting evidence. This value uses Coordinated Universal Time (UTC) and ISO 8601 format
       * @example 2022-07-28T16:43:00.000Z
       */
      readonly evidence_due_date?: string;
      /**
       * Format: int64
       * @description The payment service provider’s dispute fee, in pence.
       * @example 1200
       */
      readonly fee?: number;
      /**
       * Format: int64
       * @description The amount, in pence, your payment service provider will take for a lost dispute. 'net_amount' is deducted from your payout after you lose the dispute. For example, a 'net_amount' of '-1500' means your PSP will take £15.00 from your next payout into your bank account. 'net_amount' is always a negative value. 'net_amount' only appears if you lose the dispute.
       * @example -2400
       */
      readonly net_amount?: number;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      readonly payment_id?: string;
      /**
       * @description The reason the paying user gave for disputing this payment. Possible values are: 'credit_not_processed', 'duplicate', 'fraudulent', 'general', 'product_not_received', 'product_unacceptable', 'unrecognised', 'subscription_cancelled', >'other'
       * @example fraudulent
       */
      readonly reason?: string;
      settlement_summary?: components['schemas']['SettlementSummary'];
      /**
       * @description The current status of the dispute. Possible values are: 'needs_response', 'won', 'lost', 'under_review'
       * @example under_review
       */
      readonly status?: string;
    };
    /** @description links for search dispute resource */
    DisputeLinksForSearch: {
      payment?: components['schemas']['Link'];
    };
    DisputesSearchResults: {
      /**
       * Format: int32
       * @description Number of disputes on the current page of search results.
       * @example 20
       */
      count?: number;
      links?: components['schemas']['SearchNavigationLinks'];
      /**
       * Format: int32
       * @description The page of results you’re viewing. To view other pages, make this request again using the 'page' parameter.
       * @example 1
       */
      page?: number;
      /** @description Contains disputes matching your search criteria. */
      results?: components['schemas']['DisputeDetailForSearch'][];
      /**
       * Format: int32
       * @description Number of total disputes matching your search criteria.
       * @example 100
       */
      total?: number;
    };
    EmbeddedRefunds: {
      refunds?: components['schemas']['Refund'][];
    };
    /** @description An error response */
    ErrorResponse: {
      /**
       * @description A GOV.UK Pay API error code. You can [find out more about this code in our documentation](https://docs.payments.service.gov.uk/api_reference/#gov-uk-pay-api-error-codes).
       * @example P0900
       */
      code?: string;
      /**
       * @description Additional details about the error
       * @example Too many requests
       */
      description?: string;
    };
    /** @example {"property1": "value1", "property2": "value2"}" */
    ExternalMetadata: {
      metadata?: {
        [key: string]: Record<string, never> | undefined;
      };
    };
    /** @description A link related to a payment */
    Link: {
      /**
       * @description A URL that lets you perform additional actions to this payment when combined with the associated `method`.
       * @example https://an.example.link/from/payment/platform
       */
      readonly href?: string;
      /**
       * @description An API method that lets you perform additional actions to this paymentwhen combined with the associated `href`.
       * @example GET
       */
      readonly method?: string;
    };
    /** @description Contains payments matching your search criteria. */
    PaymentDetailForSearch: {
      _links?: components['schemas']['PaymentLinksForSearch'];
      /**
       * Format: int64
       * @description The description assigned to the payment when it was created.
       * @example 1200
       */
      amount?: number;
      /**
       * @description How the payment will be authorised. Payments created in `web` mode require the paying user to visit the `next_url` to complete the payment.
       * @enum {string}
       */
      authorisation_mode?: 'web' | 'moto_api' | 'external';
      authorisation_summary?: components['schemas']['AuthorisationSummary'];
      /**
       * @deprecated
       * @description This attribute is deprecated. Please use `card_details.card_brand` instead.
       * @example Visa
       */
      readonly card_brand?: string;
      card_details?: components['schemas']['CardDetails'];
      /**
       * Format: int64
       * @description The [corporate card surcharge](https://docs.payments.service.gov.uk/corporate_card_surcharges/#add-corporate-card-fees) amount in pence.
       * @example 250
       */
      readonly corporate_card_surcharge?: number;
      /** @example 2016-01-21T17:15:00.000Z */
      readonly created_date?: string;
      /**
       * @description `delayed_capture` is `true` if you’re [controlling how long it takes GOV.UK Pay to take (‘capture’) a payment](https://docs.payments.service.gov.uk/delayed_capture).
       * @example false
       */
      readonly delayed_capture?: boolean;
      /**
       * @description The description assigned to the payment when it was created.
       * @example Your Service Description
       */
      description?: string;
      /** @example The paying user’s email address. */
      email?: string;
      /**
       * Format: int64
       * @description The [payment service provider’s (PSP) transaction fee](https://docs.payments.service.gov.uk/reporting/#psp-fees), in pence. `fee` only appears when we have taken (‘captured’) the payment from the user or if their payment fails after they submitted their card details. `fee` will not appear if your PSP is Worldpay or you are using an API key from a test service.
       * @example 5
       */
      readonly fee?: number;
      /**
       * @description The ISO-6391 Alpha-2 code of the [language of the user's payment page](https://docs.payments.service.gov.uk/optional_features/welsh_language).
       * @example en
       * @enum {string}
       */
      language?: 'en' | 'cy';
      metadata?: components['schemas']['ExternalMetadata'];
      /**
       * @description Indicates if this payment is a [Mail Order / Telephone Order (MOTO) payment](https://docs.payments.service.gov.uk/moto_payments).
       * @example false
       */
      moto?: boolean;
      /**
       * Format: int64
       * @description The amount, in pence, that will be paid into your bank account after your payment service provider takes the `fee`.
       * @example 1195
       */
      readonly net_amount?: number;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      readonly payment_id?: string;
      /**
       * @description The payment service provider that processed this payment.
       * @example worldpay
       */
      readonly payment_provider?: string;
      /**
       * @description The unique ID your payment service provider generated for this payment. This is not the same as the `payment_id`.
       * @example reference-from-payment-gateway
       */
      readonly provider_id?: string;
      /**
       * @description The reference associated with the payment when it was created. `reference` is not unique - multiple payments can have the same `reference` value.
       * @example your-reference
       */
      reference?: string;
      refund_summary?: components['schemas']['RefundSummary'];
      /**
       * @description The URL you direct the paying user to after their payment journey on GOV.UK Pay ends.
       * @example http://your.service.domain/your-reference
       */
      readonly return_url?: string;
      settlement_summary?: components['schemas']['PaymentSettlementSummary'];
      state?: components['schemas']['PaymentState'];
      /**
       * Format: int64
       * @description Amount your user paid in pence, including corporate card fees. `total_amount` only appears if you [added a corporate card surcharge to the payment](https://docs.payments.service.gov.uk/corporate_card_surcharges/#add-corporate-card-fees).
       * @example 1450
       */
      readonly total_amount?: number;
    };
    /** @description A List of Payment Events information */
    PaymentEvent: {
      _links?: components['schemas']['PaymentEventLink'];
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      readonly payment_id?: string;
      state?: components['schemas']['PaymentState'];
      /**
       * @description When this payment’s state changed. This value uses Coordinated Universal Time (UTC) and ISO-8601 format - `YYYY-MM-DDThh:mm:ss.SSSZ`.
       * @example 2017-01-10T16:44:48.646Z
       */
      readonly updated?: string;
    };
    /** @description Resource link for a payment of a payment event */
    PaymentEventLink: {
      payment_url?: components['schemas']['Link'];
    };
    /** @description A List of Payment Events information */
    PaymentEvents: {
      _links?: components['schemas']['PaymentLinksForEvents'];
      events?: components['schemas']['PaymentEvent'][];
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      readonly payment_id?: string;
    };
    PaymentInstrument: {
      CardDetails?: components['schemas']['CardDetails'];
      /**
       * @description The date and time you created this payment instrument. This value uses Coordinated Universal Time (UTC) and ISO 8601 format – `YYYY-MM-DDThh:mm:ss.sssZ`.
       * @example 2022-07-08T14:33:00.000Z
       */
      created_date?: string;
      /**
       * @description The type of payment instrument.
       * @enum {string}
       */
      type?: 'card';
    };
    /** @description links for payment */
    PaymentLinks: {
      auth_url_post?: components['schemas']['PostLink'];
      cancel?: components['schemas']['PostLink'];
      capture?: components['schemas']['PostLink'];
      events?: components['schemas']['Link'];
      next_url?: components['schemas']['Link'];
      next_url_post?: components['schemas']['PostLink'];
      refunds?: components['schemas']['Link'];
      self?: components['schemas']['Link'];
    };
    /** @description links for events resource */
    PaymentLinksForEvents: {
      self?: components['schemas']['Link'];
    };
    /** @description links for search payment resource */
    PaymentLinksForSearch: {
      cancel?: components['schemas']['PostLink'];
      capture?: components['schemas']['PostLink'];
      events?: components['schemas']['Link'];
      refunds?: components['schemas']['Link'];
      self?: components['schemas']['Link'];
    };
    /** @description The Payment Refund Request Payload */
    PaymentRefundRequest: {
      /**
       * Format: int32
       * @description The amount you want to [refund to your user](https://docs.payments.service.gov.uk/refunding_payments/) in pence.
       * @example 150000
       */
      amount: number;
      /**
       * Format: int32
       * @description Amount in pence. Total amount still available before issuing the refund
       * @example 200000
       */
      refund_amount_available?: number;
    };
    PaymentSearchResults: {
      _links?: components['schemas']['SearchNavigationLinks'];
      /**
       * Format: int32
       * @description Number of payments on the current page of search results.
       * @example 20
       */
      count?: number;
      /**
       * Format: int32
       * @description The [page of results you’re viewing](https://docs.payments.service.gov.uk/api_reference/#pagination). To view other pages, make this request again using the `page` parameter.
       * @example 1
       */
      page?: number;
      /** @description Contains payments matching your search criteria. */
      results?: components['schemas']['PaymentDetailForSearch'][];
      /**
       * Format: int32
       * @description Total number of payments matching your search criteria.
       * @example 100
       */
      total?: number;
    };
    /** @description A structure representing information about a settlement */
    PaymentSettlementSummary: {
      /**
       * @description The date and time GOV.UK Pay asked your payment service provider to take the payment from your user’s account. This value uses Coordinated Universal Time (UTC) and ISO 8601 format - `YYYY-MM-DDThh:mm:ss.SSSZ`
       * @example 2016-01-21T17:15:00.000Z
       */
      readonly capture_submit_time?: string;
      /**
       * @description The date your payment service provider took the payment from your user. This value uses ISO 8601 format - `YYYY-MM-DD`
       * @example 2016-01-21
       */
      readonly captured_date?: string;
      /**
       * @description The date that the transaction was paid into the service's account.
       * @example 2016-01-21
       */
      readonly settled_date?: string;
    };
    /** @description A structure representing the current state of the payment in its lifecycle. */
    PaymentState: {
      /** @description If `can_retry` is `true`, you can use this agreement to try to take another recurring payment. If `can_retry` is `false`, you cannot take another recurring payment with this agreement. `can_retry` only appears on failed payments that were attempted using an agreement for recurring payments. */
      readonly can_retry?: boolean | null;
      /**
       * @description An [API error code](https://docs.payments.service.gov.uk/api_reference/#gov-uk-pay-api-error-codes)that explains why the payment failed. `code` only appears if the payment failed.
       * @example P010
       */
      readonly code?: string;
      /** @description Indicates whether a payment journey is finished. */
      readonly finished?: boolean;
      /**
       * @description A description of what went wrong with this payment. `message` only appears if the payment failed.
       * @example User cancelled the payment
       */
      readonly message?: string;
      /**
       * @description Where the payment is in [the payment status lifecycle](https://docs.payments.service.gov.uk/api_reference/#payment-status-meanings).
       * @example created
       */
      readonly status?: string;
    };
    PaymentWithAllLinks: {
      _links?: components['schemas']['PaymentLinks'];
      /**
       * Format: int64
       * @description The description assigned to the payment when it was created.
       * @example 1200
       */
      amount?: number;
      /**
       * @description How the payment will be authorised. Payments created in `web` mode require the paying user to visit the `next_url` to complete the payment.
       * @enum {string}
       */
      authorisation_mode?: 'web' | 'moto_api' | 'external';
      authorisation_summary?: components['schemas']['AuthorisationSummary'];
      /**
       * @deprecated
       * @description This attribute is deprecated. Please use `card_details.card_brand` instead.
       * @example Visa
       */
      readonly card_brand?: string;
      card_details?: components['schemas']['CardDetails'];
      /**
       * Format: int64
       * @description The [corporate card surcharge](https://docs.payments.service.gov.uk/corporate_card_surcharges/#add-corporate-card-fees) amount in pence.
       * @example 250
       */
      readonly corporate_card_surcharge?: number;
      /** @example 2016-01-21T17:15:00.000Z */
      readonly created_date?: string;
      /**
       * @description `delayed_capture` is `true` if you’re [controlling how long it takes GOV.UK Pay to take (‘capture’) a payment](https://docs.payments.service.gov.uk/delayed_capture).
       * @example false
       */
      readonly delayed_capture?: boolean;
      /**
       * @description The description assigned to the payment when it was created.
       * @example Your Service Description
       */
      description?: string;
      /** @example The paying user’s email address. */
      email?: string;
      /**
       * Format: int64
       * @description The [payment service provider’s (PSP) transaction fee](https://docs.payments.service.gov.uk/reporting/#psp-fees), in pence. `fee` only appears when we have taken (‘captured’) the payment from the user or if their payment fails after they submitted their card details. `fee` will not appear if your PSP is Worldpay or you are using an API key from a test service.
       * @example 5
       */
      readonly fee?: number;
      /**
       * @description The ISO-6391 Alpha-2 code of the [language of the user's payment page](https://docs.payments.service.gov.uk/optional_features/welsh_language).
       * @example en
       * @enum {string}
       */
      language?: 'en' | 'cy';
      metadata?: components['schemas']['ExternalMetadata'];
      /**
       * @description Indicates if this payment is a [Mail Order / Telephone Order (MOTO) payment](https://docs.payments.service.gov.uk/moto_payments).
       * @example false
       */
      moto?: boolean;
      /**
       * Format: int64
       * @description The amount, in pence, that will be paid into your bank account after your payment service provider takes the `fee`.
       * @example 1195
       */
      readonly net_amount?: number;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      readonly payment_id?: string;
      /**
       * @description The payment service provider that processed this payment.
       * @example worldpay
       */
      readonly payment_provider?: string;
      /**
       * @description The unique ID your payment service provider generated for this payment. This is not the same as the `payment_id`.
       * @example reference-from-payment-gateway
       */
      readonly provider_id?: string;
      /**
       * @description The reference associated with the payment when it was created. `reference` is not unique - multiple payments can have the same `reference` value.
       * @example your-reference
       */
      reference?: string;
      refund_summary?: components['schemas']['RefundSummary'];
      /**
       * @description The URL you direct the paying user to after their payment journey on GOV.UK Pay ends.
       * @example http://your.service.domain/your-reference
       */
      readonly return_url?: string;
      settlement_summary?: components['schemas']['PaymentSettlementSummary'];
      state?: components['schemas']['PaymentState'];
      /**
       * Format: int64
       * @description Amount your user paid in pence, including corporate card fees. `total_amount` only appears if you [added a corporate card surcharge to the payment](https://docs.payments.service.gov.uk/corporate_card_surcharges/#add-corporate-card-fees).
       * @example 1450
       */
      readonly total_amount?: number;
    };
    /** @description A POST link related to a payment */
    PostLink: {
      /**
       * @description A URL that lets you perform additional actions to this payment when combined with the associated `method`.
       * @example https://an.example.link/from/payment/platform
       */
      readonly href?: string;
      /** @example POST */
      readonly method?: string;
      /** @example {
       *       "description": "This is a value for a parameter called description"
       *     } */
      params?: {
        [key: string]: Record<string, never> | undefined;
      };
      /** @example application/x-www-form-urlencoded */
      type?: string;
    };
    /** @description prefilled_cardholder_details */
    PrefilledCardholderDetails: {
      billing_address?: components['schemas']['Address'];
      /**
       * @description The cardholder name you prefilled when you created this payment.
       * @example J. Bogs
       */
      cardholder_name?: string;
    };
    Refund: {
      _links?: components['schemas']['RefundLinksForSearch'];
      /**
       * Format: int64
       * @description The amount refunded to the user in pence.
       * @example 120
       */
      readonly amount?: number;
      /**
       * @description The date and time you created this refund. This value uses Coordinated Universal Time (UTC) and ISO 8601 format - `YYYY-MM-DDThh:mm:ss.SSSZ`.
       * @example 2017-01-10T16:52:07.855Z
       */
      readonly created_date?: string;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      readonly payment_id?: string;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this refund when you created it.
       * @example act4c33g40j3edfmi8jknab84x
       */
      readonly refund_id?: string;
      settlement_summary?: components['schemas']['RefundSettlementSummary'];
      /**
       * @description The [status of the refund](https://docs.payments.service.gov.uk/refunding_payments/#checking-the-status-of-a-refund-status).
       * @example success
       * @enum {string}
       */
      readonly status?: 'submitted' | 'success' | 'error';
    };
    /** @description Contains the refunds matching your search criteria. */
    RefundDetailForSearch: {
      _links?: components['schemas']['RefundLinksForSearch'];
      /**
       * Format: int64
       * @description The amount refunded to the user in pence.
       * @example 120
       */
      readonly amount?: number;
      /**
       * @description The date and time you created this refund. This value uses Coordinated Universal Time (UTC) and ISO 8601 format - `YYYY-MM-DDThh:mm:ss.SSSZ`.
       * @example 2017-01-10T16:52:07.855Z
       */
      readonly created_date?: string;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      readonly payment_id?: string;
      /**
       * @description The unique ID GOV.UK Pay automatically associated with this refund when you created it.
       * @example act4c33g40j3edfmi8jknab84x
       */
      readonly refund_id?: string;
      settlement_summary?: components['schemas']['RefundSettlementSummary'];
      /**
       * @description The [status of the refund](https://docs.payments.service.gov.uk/refunding_payments/#checking-the-status-of-a-refund-status).
       * @example success
       * @enum {string}
       */
      readonly status?: 'submitted' | 'success' | 'error';
    };
    RefundForSearchResult: {
      _embedded?: components['schemas']['EmbeddedRefunds'];
      _links?: components['schemas']['RefundLinksForSearch'];
      /**
       * @description The unique ID GOV.UK Pay associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      payment_id?: string;
    };
    /** @description links for search refunds resource */
    RefundLinksForSearch: {
      payment?: components['schemas']['Link'];
      self?: components['schemas']['Link'];
    };
    RefundSearchResults: {
      _links?: components['schemas']['SearchNavigationLinks'];
      /**
       * Format: int32
       * @description Number of refunds on the current page of search results.
       * @example 20
       */
      count?: number;
      /**
       * Format: int32
       * @description The [page of results](payments.service.gov.uk/api_reference/#pagination) you’re viewing. To view other pages, make this request again using the `page` parameter.
       * @example 1
       */
      page?: number;
      /** @description Contains the refunds matching your search criteria. */
      results?: components['schemas']['RefundDetailForSearch'][];
      /**
       * Format: int32
       * @description Number of refunds matching your search criteria.
       * @example 100
       */
      total?: number;
    };
    /** @description A structure representing information about a settlement for refunds */
    RefundSettlementSummary: {
      /**
       * @description The date Stripe took the refund from a payout to your bank account. `settled_date` only appears if Stripe has taken the refund. This value uses Coordinated Universal Time (UTC) and ISO 8601 format - `YYYY-MM-DD`.
       * @example 2016-01-21
       */
      readonly settled_date?: string;
    };
    /** @description A structure representing the refunds availability */
    RefundSummary: {
      /**
       * Format: int64
       * @description How much you can refund to the user, in pence.
       * @example 100
       */
      readonly amount_available?: number;
      /**
       * Format: int64
       * @description How much you’ve already refunded to the user, in pence.
       */
      readonly amount_submitted?: number;
      /**
       * @description Whether you can [refund the payment](https://docs.payments.service.gov.uk/refunding_payments/#checking-the-status-of-a-refund-status).
       * @example available
       */
      status?: string;
    };
    RefundsResponse: {
      _links?: components['schemas']['RefundLinksForSearch'];
      /**
       * @description The unique ID GOV.UK Pay associated with this payment when you created it.
       * @example hu20sqlact5260q2nanm0q8u93
       */
      payment_id?: string;
    };
    /** @description A Request Error response */
    RequestError: {
      /**
       * @description An [API error code](https://docs.payments.service.gov.uk/api_reference/#gov-uk-pay-api-error-codes)that explains why the payment failed.<br><br>`code` only appears if the payment failed.
       * @example P0102
       */
      code?: string;
      /**
       * @description Additional details about the error.
       * @example Invalid attribute value: amount. Must be less than or equal to 10000000
       */
      description?: string;
      /**
       * @description The parameter in your request that's causing the error.
       * @example amount
       */
      field?: string;
      /**
       * @description The header in your request that's causing the error.
       * @example Idempotency-Key
       */
      header?: string;
    };
    /** @description Links to navigate through pages of your search. */
    SearchNavigationLinks: {
      first_page?: components['schemas']['Link'];
      last_page?: components['schemas']['Link'];
      next_page?: components['schemas']['Link'];
      prev_page?: components['schemas']['Link'];
      self?: components['schemas']['Link'];
    };
    /** @description Contains information about when a lost dispute was settled. A dispute is settled when your payment service provider takes it from a payout to your bank account. 'settlement_summary' only appears if you lost the dispute. */
    SettlementSummary: {
      /**
       * @description The date your payment service provider took the disputed payment and dispute fee from a payout to your bank account. This value appears in ISO 8601 format - `YYYY-MM-DD`. `settled_date` only appears if you lost the dispute.
       * @example 2022-07-28
       */
      readonly settled_date?: string;
    };
    /** @description Object containing information about the 3D Secure authentication of the payment. */
    ThreeDSecure: {
      /** @description Indicates if this payment was authorised with 3D Secure authentication. `required` is `true` if the payment required 3D Secure authentication. */
      required?: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  'Search agreements': {
    parameters: {
      query?: {
        /**
         * @description Returns agreements with a `reference` that exactly matches the value you sent. This parameter is not case sensitive. A `reference` was associated with the agreement when that agreement was created.
         * @example CT-22-23-0001
         */
        reference?: string;
        /** @description Returns agreements in a matching `status`. `status` reflects where an agreement is in its lifecycle. You can [read more about the meanings of the different agreement status values](https://docs.payments.service.gov.uk/recurring_payments/#understanding-agreement-status). */
        status?: 'created' | 'active' | 'cancelled' | 'inactive';
        /**
         * @description Returns a specific page of results. Defaults to `1`. You can [read about search pagination](https://docs.payments.service.gov.uk/api_reference/#pagination)
         * @example 1
         */
        page?: string;
        /**
         * @description The number of agreements returned per results page. Defaults to `500`. Maximum value is `500`. You can [read about search pagination](https://docs.payments.service.gov.uk/api_reference/#pagination)
         * @example 50
         */
        display_size?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['AgreementSearchResults'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Your request failed. Check the `code` and `description` in the response to find out why your request failed. */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Create an agreement': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description requestPayload */
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateAgreementRequest'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Agreement'];
        };
      };
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Your request failed. Check the `code` and `description` in the response to find out why your request failed. */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Get an agreement': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /**
         * @description Returns the agreement with the matching `agreement_id`. GOV.UK Pay generated an `agreement_id` when you created the agreement.
         * @example cgc1ocvh0pt9fqs0ma67r42l58
         */
        agreementId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Agreement'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Cancel an agreement': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /**
         * @description The `agreement_id` of the agreement you are cancelling
         * @example cgc1ocvh0pt9fqs0ma67r42l58
         */
        agreementId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Cancellation of agreement failed */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Authorise a MOTO payment': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['AuthorisationRequest'];
      };
    };
    responses: {
      /** @description Your authorisation request was successful. */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Your request is invalid. Check the `code` and `description` in the response to find out why your request failed. */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description The `card_number` you sent is not a valid card number or you chose not to accept this card type. Check the `code` and `description` fields in the response to find out why your request failed. */
      402: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description A value you sent is invalid or missing. Check the `code` and `description` in the response to find out why your request failed. */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description There is something wrong with GOV.UK Pay. If there are no issues on our status page (https://payments.statuspage.io), you can contact us with your error code and we'll investigate. */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Search disputes': {
    parameters: {
      query?: {
        /**
         * @description Returns disputes raised on or after the `from_date`. Date and time must be coordinated Universal Time (UTC) and ISO 8601 format to second-level accuracy - `YYYY-MM-DDThh:mm:ssZ`.
         * @example 2015-08-13T12:35:00Z
         */
        from_date?: string;
        /**
         * @description Returns disputes raised before the `to_date`. Date and time must be coordinated Universal Time (UTC) and ISO 8601 format to second-level accuracy - `YYYY-MM-DDThh:mm:ssZ`.
         * @example 2015-08-13T12:35:00Z
         */
        to_date?: string;
        /** @description Returns disputes settled on or after the `from_settled_date`. Date must be in ISO 8601 format to date-level accuracy - `YYYY-MM-DD`. Disputes are settled when your payment service provider takes the disputed amount from a payout to your bank account. */
        from_settled_date?: string;
        /** @description Returns disputes settled before the `to_settled_date`. Date must be in ISO 8601 format to date-level accuracy - `YYYY-MM-DD`. Disputes are settled when your payment service provider takes the disputed amount from a payout to your bank account. */
        to_settled_date?: string;
        /**
         * @description Returns disputes with a matching `status`. `status` reflects what stage of the dispute process a dispute is at. You can [read more about the meanings of the different status values](https://docs.payments.service.gov.uk/disputes/#dispute-status)
         * @example won
         */
        status?: 'needs_response' | 'under_review' | 'lost' | 'won';
        /** @description Returns a specific page of results. Defaults to `1`. */
        page?: string;
        /** @description The number of disputes returned per results page. Defaults to `500`. Maximum value is `500`. */
        display_size?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['DisputesSearchResults'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid parameters: from_date, to_date, from_settled_date, to_settled_date, status, display_size. See Public API documentation for the correct data formats */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Search payments': {
    parameters: {
      query?: {
        /** @description Returns payments with `reference` values exactly matching your specified value. */
        reference?: string;
        /** @description Returns payments with matching `email` values. You can send full or partial email addresses. `email` is the paying user’s email address. */
        email?: string;
        /**
         * @description Returns payments in a matching `state`. `state` reflects where a payment is in the [payment status lifecycle](https://docs.payments.service.gov.uk/api_reference/#payment-status-lifecycle).
         * @example success
         */
        state?:
          | 'created'
          | 'started'
          | 'submitted'
          | 'success'
          | 'failed'
          | 'cancelled'
          | 'error';
        /** @description Returns payments paid with a particular card brand. */
        card_brand?: string;
        /**
         * @description Returns payments created on or after the `from_date`. Date and time must be coordinated Universal Time (UTC) and ISO 8601 format to second-level accuracy - `YYYY-MM-DDThh:mm:ssZ`.
         * @example 2015-08-13T12:35:00Z
         */
        from_date?: string;
        /**
         * @description Returns payments created before the `to_date`. Date and time must be coordinated Universal Time (UTC) and ISO 8601 format to second-level accuracy - `YYYY-MM-DDThh:mm:ssZ`.
         * @example 2015-08-13T12:35:00Z
         */
        to_date?: string;
        /** @description Returns a [specific page of results](https://docs.payments.service.gov.uk/api_reference/#pagination). Defaults to `1`. */
        page?: string;
        /** @description The number of payments returned [per results page](https://docs.payments.service.gov.uk/api_reference/#pagination). Defaults to `500`. Maximum value is `500`. */
        display_size?: string;
        /** @description Returns payments paid with cards under this cardholder name. */
        cardholder_name?: string;
        /** @description Returns payments paid by cards beginning with the `first_digits_card_number` value. `first_digits_card_number` value must be 6 digits. */
        first_digits_card_number?: string;
        /** @description Returns payments paid by cards ending with the `last_digits_card_number` value. `last_digits_card_number` value must be 4 digits. */
        last_digits_card_number?: string;
        /** @description Returns payments settled on or after the `from_settled_date` value. You can only search by settled date if your payment service provider is Stripe. Date must be in ISO 8601 format to date-level accuracy - `YYYY-MM-DD`. Payments are settled when your payment service provider sends funds to your bank account. */
        from_settled_date?: string;
        /** @description Returns payments settled before the `to_settled_date` value. You can only search by settled date if your payment service provider is Stripe. Date must be in ISO 8601 format to date-level accuracy - `YYYY-MM-DD`. Payments are settled when your payment service provider sends funds to your bank account. */
        to_settled_date?: string;
        /**
         * @description Returns payments that were authorised using the agreement with this `agreement_id`. Must be an exact match.
         * @example abcefghjklmnopqr1234567890
         */
        agreement_id?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['PaymentSearchResults'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid parameters: from_date, to_date, status, display_size. See Public API documentation for the correct data formats */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Create a payment': {
    parameters: {
      query?: never;
      header?: {
        'Idempotency-Key'?: string;
      };
      path?: never;
      cookie?: never;
    };
    /** @description requestPayload */
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateCardPaymentRequest'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['CreatePaymentResult'];
        };
      };
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Your request failed. Check the `code` and `description` in the response to find out why your request failed. */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Get a payment': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /**
         * @description Returns the payment with the matching `payment_id`.
         * @example hu20sqlact5260q2nanm0q8u93
         */
        paymentId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['PaymentWithAllLinks'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Cancel a payment': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /**
         * @description The `payment_id` of the payment you’re cancelling.
         * @example hu20sqlact5260q2nanm0q8u93
         */
        paymentId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Cancellation of payment failed */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Conflict */
      409: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Capture a payment': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /**
         * @description The `payment_id` of the payment you’re capturing.
         * @example hu20sqlact5260q2nanm0q8u93
         */
        paymentId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Capture of payment failed */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Conflict */
      409: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Get events for a payment': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /**
         * @description Payment identifier
         * @example hu20sqlact5260q2nanm0q8u93
         */
        paymentId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['PaymentEvents'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Get all refunds for a payment': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description The unique `payment_id` of the payment you want a list of refunds for. */
        paymentId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RefundForSearchResult'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Submit a refund for a payment': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description The unique `payment_id` of the payment you want to refund. */
        paymentId: string;
      };
      cookie?: never;
    };
    /** @description requestPayload */
    requestBody: {
      content: {
        'application/json': components['schemas']['PaymentRefundRequest'];
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Refund'];
        };
      };
      /** @description ACCEPTED */
      202: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Refund amount available mismatch */
      412: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Get a payment refund': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description The unique `payment_id` of the payment you want to view a refund of. */
        paymentId: string;
        /** @description The unique `refund_id` of the refund you want to view. If one payment has multiple refunds, each refund has a different `refund_id`. */
        refundId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Refund'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Too many requests */
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ErrorResponse'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
  'Search refunds': {
    parameters: {
      query?: {
        /**
         * @description Returns refunds created on or after the `from_date`. Date and time must use Coordinated Universal Time (UTC) and ISO 8601 format to second-level accuracy - `YYYY-MM-DDThh:mm:ssZ`.
         * @example 2015-08-13T12:35:00Z
         */
        from_date?: string;
        /**
         * @description Returns refunds created before the `to_date`. Date and time must use Coordinated Universal Time (UTC) and ISO 8601 format to second-level accuracy - `YYYY-MM-DDThh:mm:ssZ`.
         * @example 2015-08-13T12:35:00Z
         */
        to_date?: string;
        /**
         * @description Returns refunds settled on or after the `from_settled_date` value. You can only use `from_settled_date` if your payment service provider is Stripe. Date must use ISO 8601 format to date-level accuracy - `YYYY-MM-DD`. Refunds are settled when Stripe takes the refund from your account balance.
         * @example 2022-08-13
         */
        from_settled_date?: string;
        /**
         * @description Returns refunds settled before the `to_settled_date` value. You can only use `to_settled_date` if your payment service provider is Stripe. Date must use ISO 8601 format to date-level accuracy - `YYYY-MM-DD`. Refunds are settled when Stripe takes the refund from your account balance.
         * @example 2022-08-13
         */
        to_settled_date?: string;
        /** @description Returns a [specific page of results](https://docs.payments.service.gov.uk/api_reference/#pagination). Defaults to `1`. */
        page?: string;
        /** @description The number of refunds returned [per results page](https://docs.payments.service.gov.uk/api_reference/#pagination). Defaults to `500`. Maximum value is `500`. */
        display_size?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK - your request was successful. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RefundSearchResults'];
        };
      };
      /** @description Your API key is missing or invalid. Read more about [authenticating GOV.UK Pay API requests](https://docs.payments.service.gov.uk/api_reference/#authentication) */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid parameters. See Public API documentation for the correct data formats */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
      /** @description Downstream system error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['RequestError'];
        };
      };
    };
  };
}
