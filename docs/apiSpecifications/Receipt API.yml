openapi: 3.0.3
info:
  title: Digital Waste Tracking Receipt API
  version: 1.0.0
  description: |
    <p>This API is for waste receivers, software developers and third party software users. It enables operators of permitted or licenced waste receiving sites to report details  of each waste movement arriving at their site.  This will be mandatory from October 2026. More information about Digital Waste Tracking is available here:
    <p><a>https://www.gov.uk/government/publications/digital-waste-tracking-service/digital-waste-tracking-service.</a></p>

     <h2>Methods</h2> <p>The API is based on REST principles and uses both a <font color="green"><b>POST</b></font> and a <font color="orange"><b>PUT</b></font> method that return data in JSON format. It uses standard HTTP error response codes. </p>
      <p>The API <font color="green"><b>POST</b></font> method is used to create a record for a waste movement that has arrived at a waste receiving site. It returns a waste tracking ID and a validation result. </p> <p>The API <font color="orange"><b>PUT</b></font> method is used to update a waste tracking record using a waste tracking ID to identify the movement. It returns a validation result.</p>
    <b>Note-</b> This API specification is currently a draft and is subject to change.
servers:
  - url: 'https://api.server.test/v1'
paths:
  /movements/receive:
    post:
      description: |
        Endpoint used when waste is received but the receiver has not yet recorded the waste movement. Generally at this stage, the receiver does not have or use the waste tracking ID. The waste tracking ID will be returned in the 201 response if the movement is successfully stored.

        <p>Example of a POST request using cURL:</p>

        <p><b>curl -X POST "https://waste-movement-external-api.test.cdp-int.defra.cloud/movements/receive" \</p>
        <p></p>
        <P>-H "Content-Type: application/json" \</p>
             -d '{</b>
             
              
                  "receivingSiteId": "12345678-1234-1234-1234-123456789012",
                  "waste": [
                  {
                   "ewcCodes": ["020101"],
                   "wasteDescription": "Basic mixed construction and demolition waste",
                   "form": "Mixed",
                   "numberOfContainers": 3,
                   "typeOfContainers": "Skip containers",
                   "quantity": {
                     "metric": "Tonnes",
                     "amount": 2.5,
                     "isEstimate": false
                    }
                   }
                   ],
                     "carrier": {
                     "organisationName": "Basic Carrier Ltd",
                     "address": "123 Basic Street, Basic City, BC1 2AB",
                     "emailAddress": "basic@carrier.com",
                     "phoneNumber": "01234567890",
                      "meansOfTransport": "Road" 
                       },
                        "acceptance": {
                        "acceptingAll": true
                      },
                         "receipt": {
                         "dateTimeReceived": "'$(date -u +"%Y-%m-%dT%H:%M:%S.000Z")'",
                         "disposalOrRecoveryCodes": [
                   {
                     "code": "R1",
                     "quantity": {
                       "metric": "Tonnes",
                       "amount": 2.5,
                       "isEstimate": false
                   }
                   }
                   ]
                   }
                   },
      requestBody:
        $ref: '#/components/requestBodies/receiveMovementRequest'
        required: true
      responses:
        '201':
          description: Success- The waste movement has been stored.
          content:
            application/json:
              schema:
                type: object
                example:
                  statusCode: 201
                  globalMovementId: 25Z34MR9
                properties:
                  wasteTrackingId:
                    type: string
                    description: 'Globally unique identifier of the movement. This ID should be stored and used for any subsequent updates of the movement. It is returned in the response body when either a POST or PUT request is successful, i.e. return code 201, 200.'
                    example: 25HRA0B2
                  validation:
                    type: object
                    properties:
                      warnings:
                        type: array
                        items:
                          $ref: '#/components/schemas/validationResult'
        '400':
          $ref: '#/components/responses/400'
  '/movements/{wasteTrackingId}/receive':
    put:
      description: |
        Endpoint to be used when waste is received and the waste record is to be updated. The carrier has a waste tracking ID and this parameter must be used in the URL path.

        <p>Example of a PUT request using cURL:</p> 
        <p><b>curl -X PUT "https://waste-movement-external-api.test.cdp-int.defra.cloud/movements/YOUR_WASTE_TRACKING_ID/receive" \</p>
        <p>-H "Content-Type: application/json" \</p>
             <b> -d  '{</b>
           
           
             "receivingSiteId": "12345678-1234-1234-1234-123456789012",
             "yourUniqueReference": "REF-BASIC-UPDATE",
             "otherReferencesForMovement": "Updated basic movement with additional details",
             "specialHandlingRequirements": "Standard handling requirements",
             "waste": [
            {
              "ewcCodes": ["020101"],
              "wasteDescription": "Updated basic mixed construction and demolition waste",
              "form": "Mixed",
              "numberOfContainers": 4,
              "typeOfContainers": "Updated skip containers",
              "quantity": {
              "metric": "Tonnes",
              "amount": 2.8,
              "isEstimate": false
              }
            }
            ],
              "carrier": {
              "organisationName": "Basic Update Carrier Ltd",
              "address": "123 Basic Update Street, Basic Update City, BUC1 2AB",
              "emailAddress": "basicupdate@carrier.com",
              "phoneNumber": "01234567890",
              "meansOfTransport": "Road"
               },
                "acceptance": {
                "acceptingAll": true
              },
                "receipt": {
                "dateTimeReceived": "2025-01-07T10:00:00.000Z",
                "disposalOrRecoveryCodes": [
               {
                "code": "R1",
                "quantity": {
                "metric": "Tonnes",
                "amount": 2.8,
                e"isEstimate": false
               }
               }
               ]
               }
              }'   
      parameters:
        - name: wasteTrackingId
          in: path
          required: true
          description: The globally unique id of the movement.
          example: 25HRA0B2
          schema:
            type: string
            example: |
              curl -X PUT "https://waste-movement-external-api.test.cdp-int.defra.cloud/movements/YOUR_WASTE_TRACKING_ID/receive" \
                 -H "Content-Type: application/json" \
                 -d '{
                       "receivingSiteId": "12345678-1234-1234-1234-123456789012",
                       "yourUniqueReference": "REF-BASIC-UPDATE",
                       "otherReferencesForMovement": "Updated basic movement with additional details",
                       "specialHandlingRequirements": "Standard handling requirements",
                       "waste": [
                         {
                           "ewcCodes": ["020101"],
                           "wasteDescription": "Updated basic mixed construction and demolition waste",
                           "form": "Mixed",
                           "numberOfContainers": 4,
                           "typeOfContainers": "Updated skip containers",
                           "quantity": {
                           "metric": "Tonnes",
                           "amount": 2.8,
                           "isEstimate": false
                         }
                       }
                    ],
                      "carrier": {
                      "organisationName": "Basic Update Carrier Ltd",
                      "address": "123 Basic Update Street, Basic Update City, BUC1 2AB",
                      "emailAddress": "basicupdate@carrier.com",
                      "phoneNumber": "01234567890",
                      "meansOfTransport": "Road"
                    },
                    "acceptance": {
                       "acceptingAll": true
                    },
                    "receipt": {
                      "dateTimeReceived": "2025-01-07T10:00:00.000Z",
                      "disposalOrRecoveryCodes": [
                        {
                         "code": "R1",
                         "quantity": {
                         "metric": "Tonnes",
                         "amount": 2.8,
                         "isEstimate": false
                       }
                     }
                   ],
                 }
                }'
      requestBody:
        $ref: '#/components/requestBodies/receiveMovementRequest'
      responses:
        '200':
          description: The waste movement receipt has been updated.
          content:
            application/json:
              schema:
                type: object
                example:
                  statusCode: 200
                  globalMovementId: 25Z34MR9
                properties:
                  wasteTrackingId:
                    type: string
                    description: Globally unique identifier of the movement. This ID should be stored and used for any subsequent updates of the movement.
                    example: 25HRA0B2
                  validation:
                    type: object
                    properties:
                      warnings:
                        type: array
                        items:
                          $ref: '#/components/schemas/validationResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          description: 'Movement not found. The details will still be stored in the Waste Tracking Service, the response informs the receiver that the carrier has provided incorrect details.'
components:
  requestBodies:
    receiveMovementRequest:
      description: |
        Details of the waste movement to be created. The mandatory paramater to be included in the API call is the <b>receivingSiteID</b>.
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - receivingSiteId
            properties:
              receivingSiteId:
                type: string
                format: uuid
                description: |
                  This is the unique identifier of the receiving site, found within the Waste Companies service. More commonly, it’s known as Site Permit Number or EPR number (Environmental Permit Reference).


                  Permit number format: England EPR/AB1234CD, NRW AB309NRW, SEPA PPC/A/1234567, WML/L/1234567 example: EPR/AB1234CD



                  Each permit also has a corresponding Waste Management Licence Number (WML) in the format EAWML123456. Some older sites may only have a WML number, though this is rare.


                  Mobile plant permits follow the same format as above, but if they have a deployment authorisation, they are also allocated a “D number” in the format D + 4 digits. This is suffixed to their permit number.
                  
                  <p>Business Rule:</p>
                  receiveMovementRequest.receivingSiteId be a site registered to organisation submitting waste receipt. 
                  
                example: EPR/AB1234CD/D6789
              hazardousWasteConsignmentCode:
                type: string
                description: |
                  Hazardous waste consignment code (If EWC is HAZ, then mandatory). The consignment note code must follow the format: XXXXXX/YYYYY. 
                  - XXXXXX is made up of 6 letters and must be followed by a forward slash /
                  - YYYYY is a 5-character unique identifier of the users choice using letters or numbers (no spaces or symbols).
                  <p>More information here</p>
                  <a>https://www.gov.uk/guidance/hazardous-waste-consignment-note-supplementary-guidance#a1-consignment-note-code</a>
                  
                  
                  <p><Business Rule></p>
                   If receiveMovementRequest.hazardousWasteConsignmentCode is entered it must be in specified format. 

                   If waste.ewcCodes is “not hazardous” receiveMovementRequest.hazardousWasteConsignmentCode is not required. 
                example: |
                  Company name: CJTILE Ltd → Code prefix: CJTILE/

                  Unique ID: A0001

                  Full code: CJTILE/A0001
              reasonForNoConsignmentCode:
                type: string
                enum:
                  - Non-Haz Waste Transfer
                  - Carrier did not provide documentation
                  - Local Authority Receipt
                description: Reason provided for not having a consignment code.
                
                  <p><Business Rule></p>
                  If waste.ewcCodes is hazardous and receiveMovementRequest.hazardousWasteConsignmentCode is not entered receiveMovementRequest.reasonForNoConsignmentCode is required. 

                  If receiveMovementRequest.hazardousWasteConsignmentCode is entered it must be either “NonHazardous Waste Transfer”, “Carrier did not provide documentation” or “Local Authority Receipt”.  

                example: Carrier did not provide documentation
              yourUniqueReference:
                type: string
                description: This could be a unique weighbridge ticket number, waste transfer note number etc.
                example: wTBrdgAA020
              otherReferencesForMovement:
                type: string
                description: Other references for this movement
                example: 
              specialHandlingRequirements:
                type: string
                maxLength: 5000
                description: Usually required only for abnormal hazardous waste that might contain harmful chemical, biological or physical characteristics. These may require some special handling to prevent harm.
                   
                example: The waste must be fully inspected by the waste handler according to the Hazardous waste consignment and or EWC codes provided.
              waste:
                type: array
                items:
                  $ref: '#/components/schemas/wasteItem'
              carrier:
                $ref: '#/components/schemas/carrier'
              brokerOrDealer:
                $ref: '#/components/schemas/brokerOrDealer'
              acceptance:
                $ref: '#/components/schemas/acceptance'
              receiver:
                $ref: '#/components/schemas/receiver'
              receipt:
                $ref: '#/components/schemas/receipt'
            example: |
              {
                     "receivingSiteId": "12345678-1234-1234-1234-123456789012",
                     "waste": [
                               {
               "ewcCodes": ["020101"],
               "wasteDescription": "Basic mixed construction and demolition waste",
               "form": "Mixed",
               "numberOfContainers": 3,
               "typeOfContainers": "Skip containers",
               "quantity": {
                 "metric": "Tonnes",
                 "amount": 2.5,
                 "isEstimate": false
                }
               }
               ],
                 "carrier": {
                 "organisationName": "Basic Carrier Ltd",
                 "address": "123 Basic Street, Basic City, BC1 2AB",
                 "emailAddress": "basic@carrier.com",
                 "phoneNumber": "01234567890",
                  "meansOfTransport": "Road" 
                   },
                    "acceptance": {
                    "acceptingAll": true
                  },
                     "receipt": {
                     "dateTimeReceived": "'$(date -u +"%Y-%m-%dT%H:%M:%S.000Z")'",
                     "disposalOrRecoveryCodes": [
               {
                 "code": "R1",
                 "quantity": {
                   "metric": "Tonnes",
                   "amount": 2.5,
                   "isEstimate": false
               }
               }
               ]
               }
               }'
  schemas:
    wasteItem:
      type: object
      required:
        - ewcCodes
        - wasteDescription
        - form
      properties:
        ewcCodes:
          type: array
          maxItems: 5
          description: |
            'An EWC code is a 6 digit code listed in the European Waste Catalogue (EWC). The EWC is a list of waste types which categorises waste based on a combination of what they are and the process or activity that produces them. <p>More information can be found below:</p>
              <a>https://www.csg.co.uk/resources/ewc-codes#:~:text=This%20European%20Waste%20Catalogue%20checker%20helps%20you%20find,either%20by%20waste%20stream%20or%20by%20list%20view</a>.' 
              <p><a>https://www.legislation.gov.uk/uksi/2005/895/schedule/1/made</a></p>
              
              <p>Business Rule:</p>
              Must be 6 digits and in the official waste.ewcCode list. 
          example: 201010
          items:
            type: string
        wasteDescription:
          type: string
          description: A detailed description of a specific waste material, including its physical characteristics, composition and any potential hazards associated with it. It''s essentially a classification of the waste that helps determine how it should be managed and disposed of safely.
          example: Basic mixed construction and demolition waste, this includes recyclable house bricks, gypsum plaster and slates.
        form:
          type: string
          enum:
            - Gas
            - Liquid
            - Solid
            - Powder
            - Sludge
            - Mixed
          description: This is the form of the waste. This could be a gas, liquid, solid, powder, sludge or mixed.
            <p>Business Rule</p>
            Must be “Gas”, “Liquid”, “Solid”, Powder”, “Sludge”, or “Mixed”. 
          example: Sludge
        numberOfContainers:
          type: number
          description: Number of containers for storing, transporting and disposing of waste materials. 
            <p>Business rule:</p>
            This must be a positive numeric entry.
          example: 2
        typeOfContainers:
          type: string
          description: |
            Containers are receptacles used for storing, transporting, and disposing of waste materials. They come in various sizes and types, ranging from small desk-side bins to large industrial skips. <p>Ongoing Development Note:</p>
            There is a new GET method endpoint in development which will return a list of container types. <p> Possible types are:</p> 
              Bag / Sack (e.g. rubble bag, refuse sack)BaleBox / Carton / CrateCan / JerrycanCarrier (e.g. pallet cage)CaskContainer (unspecified)Drum (typically 205 L)Fibre drumIntermediate Bulk Container (e.g. 1000 L)Loose (no container)Pallet (e.g. shrink‑wrapped items)Roll‑on Roll‑off container (RoRo)SkipTanker / TankWheelie Bin (any size).
          example: rubble bag, pallet
        weight:
          $ref: '#/components/schemas/weight'
        pops:
          type: object
          properties:
            containsPops:
              type: boolean
              description: |
                Persistent organic pollutants (POPs) are chemical substances that do not break down in the environment. They are a danger to human health and the environment. POPs can be present in hazardous and non-hazardous waste. <p>More information on POPs can be found here:</p>
                <a>https://www.gov.uk/government/collections/classify-different-types-of-waste#hazardous-waste-and-pops</a>
              example: true
            pops:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: |-
                      The name of the waste type, e.g. Aldrin, Chlordane, Dieldrin etc.
                      <!DOCTYPE html> <html> <style> table, th, td { border:1px solid red; } </style> <body> <h4> List of Hazardous POPs</h4>
                      <tr> <td>Aldrin,</td> <td>Chlordane,</td> <td>Chlordecone,</td> <td>Dicofol,</td> <td>Dieldrin,</td> <td>Endrin,</td> <td>Heptachlor,</td> <td>Hexabromobiphenyl,</td> <td>Hexabromocyclododecane (HBCDD),</td> <td>Hexabromodiphenyl ether and heptabromodiphenyl ether,</td> <td>Hexachlorobenzene (HCB),</td> <td>Hexachlorobutadiene,</td> <td>Alpha hexachlorocyclohexane,</td> <td>Beta hexachlorocyclohexane, </td> <td>Lindane,</td> <td>Mirex,</td> <td>Pentachlorobenzene,</td> <td>Polychlorinated biphenyls (PCB),</td> <td>Toxaphene,</td> <td>DDT,</td> <td>Perfluorooctane sulfonic acid (PFOS), its salts and perfluorooctane sulfonyl fluorid,</td> <td>Chlordane,</td> <td>Polychlorinated dibenzo-p-dioxins (PCDD),</td> <td>Polychlorinated dibenzofurans (PCDF),</td> <td>UV-328</td> </tr>
                      </table> </body> </html>
                      <p>A listing of POPS in the Stockholme convention can be found here:</p>
                      https://www.pops.int/TheConvention/ThePOPs/AllPOPs/tabid/2509/Default.aspx
                      
                      <p>Business Rule:</p>
                      If waste.pops.containsPops is True then waste.pops.pops.name must be a valid name. 
                    example: Aldrin
                  concentration:
                    type: number
                    description: |
                      'The concentration of the waste per kilogram, e.g. 50mg per kg of Chlordane.'
                      <p>Business Rule:</p>
                      If waste.pops.containsPops is True then waste.pops.components.concentration must be a valid decimal.
                    example: 100
        hazardous:
          type: object
          properties:
            containsHazardous:
              type: boolean
              description: 'Hazardous waste is any waste that is potentially harmful to human health or the environment. This is a boolean value, i.e. true (contains hazourda waste) or false.'
              example: true
            hazCodes:
              type: array
              description: |
                Hazardous waste codes are a list of codes that describe the hazardous waste. Common types could include codes, HP1 - HP15. For more informaation refer to the waste support website at:  <p><a>https://www.wastesupport.co.uk/hazard-codes/</a></p> Input should be numeric only. <p>More information on hazardous waste is avaialable here</p> <a>https://www.gov.uk/government/publications/waste-classification-technical-guidance</a>.
                 <a>https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1021051/Waste_classification_technical_guidance_WM3.pdf</a>
              
                <p>Business Rule:</p>
                 If waste.hazardous.containsHazardous is True then waste.hazardous.hazCodes must be a vailid code 

              example: '5, 10, 12'
              items:
                type: integer
            components:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: 'Name of the hazardous material, e.g. Mercury.'
                    example: lead
                  concentration:
                    type: number
                    description: 'The concentration of the hazardous materrial per Kilo, e.g. 30mg per kg.
                      <p>Business Rule:</p>
                      Must be a positive value.  
                    example: 50
        disposalOrRecoveryCodes:
          type: array
          items:
            $ref: '#/components/schemas/disposalOrRecoveryCode'
    carrier:
      type: object
      properties:
        registrationNumber:
          type: string
          description: |
            <p>A waste carrier registration number is a legal requirement for businesses that transport, buy, sell, or dispose of waste. This license ensures that waste is handled and transported in a responsible and environmentally friendly manner.</p>
            
            <p><font color="green"><b>England & Wales</b></font></p> Waste Carrier Registration: A common format is CBDUXXXXXX (Upper Tier) or CBDLXXXXXX (Lower Tier), where "CBD" likely
            stands for "Carrier, Broker, Dealer" and the "U" or "L" indicates upper or lower tier registration.
            
            <p>All registrations begin with CBD, followed by:

            L = Lower tier
            U = Upper tier
            This is then followed by 6 digits.' </p>
            
            <p><font color="green"><b>Scotland</b></font></p> Typically starts with WCR
            followed by numbers and potentially letters according to the Scottish Environment Protection Agency (SEPA).</p>  
            
            Current format – WCR/R/1234567

            Previous formats – SCO/123456, SEA/123456, SNO/123456, SWE/123456, WCR/123456

            Proposed format under new regulations (from April 2026) - EAS/R/xxxxxx (xxxxxx being actual numbers).
            
            
            
            <p><font color="green"><b>Northern Ireland</b></font></p> May
            include a prefix like ROC followed by UT (Upper Tier) or LT (Lower Tier) and then numbers.<p></p>
            
            ROC UT ####

            ROC LT ####

             
          example: England - 'CBDL123456, CBDU123456, Scotland - WCR/R/522048, Northern Ireland - ROCUT979195'
        reasonForNoRegistrationNumber:
          type: string
          description: |
            Provide reasons for not having the carrier registration number.
            <p>Business Rule:</p>
            
            If “N/A” is entered into carrier.registrationNumber then carrier.reasonForNoRegistrationNumber is required. 

            If a string is entered into carrier.registrationNumber then carrier.reasonForNoRegistrationNumber is not required.

          example: Waste carrier did not provide a carrier registration Number.
        organisationName:
          type: string
          description: The business name of the carrier.
          example: Waste Carriers Lite Ltd
        address:
          type: string
          description: |
            The business location address of the carrier. A valid postcode must be included. The postcode should follow the same structure as DEFRA’s existing register of Waste Carriers, Brokers and Dealers. More information here: 
            
            <a>https://environment.data.gov.uk/public-register/view/search-waste-carriers-brokers</a>
            
            
            <p>Business Rules:</p> 
            Must be in specified address.postcode format, see example. 
            <p>Address and post code are optional for Carriers and Brokers/Dealers. However, if they enter either of these, then they must enter both.</p>
          example: '26a Oil Drum Lane, W12 7ZL'
        emailAddress:
          type: string
          description: The email address of the carrier.
          example: info@wastecarrierselite.co.uk
        phoneNumber:
          type: string
          description: The UK or internationl phone number of the carrier.
          example: 020 4756 3232
        vehicleRegistration:
          type: string
          description: This is the carrier's vehicle registration number.
            <p>Business Rule:</p>
            If carrier.meansOfTransport is “Road” then carrier.vehicleRegistration is required.  

            If carrier.meansOfTransport is not “Road” then carrier.vehicleRegistration is not required
          example: RNT 493
        meansOfTransport:
          type: string
          enum:
            - Road
            - Rail
            - Air
            - Sea
            - Inland Waterway
            - Pipe
            - Other
          description: |
            This describes how the waste is transported (road, rail, air, sea, inland waterway, others)
            
            <o>Business Rule:</p>
            Must be either “Road”, “Rail”, “Air”, “Sea”, “Inland Waterway”, “Piped” or "other"
            
          
          example: Rail
    brokerOrDealer:
      type: object
      properties:
        organisationName:
          type: string
          description: The broker or dealer organisation name who arranged this transfer.
          example: Waste Desposal Ltd
        address:
          type: string
          description: |
             The business location address of the carrier. A valid postcode must be included. The postcode should follow the same structure as DEFRA’s existing register of Waste Carriers, Brokers and Dealers. More information here: 
            
             <a>https://environment.data.gov.uk/public-register/view/search-waste-carriers-brokers</a>
            
            
             <p>Business Rules:</p> 
             Must be in specified address.postcode format, see example. 
             <p>Address and post code are optional for Carriers and Brokers/Dealers. However, if they enter either of these, then they must enter both.</p>
          example: 26a Oil Drum Lane, W12 7ZL
        registrationNumber:
          type: string
          description: |
            <p>A waste carrier registration number is a legal requirement for businesses that transport, buy, sell, or dispose of waste. This license ensures that waste is handled and transported in a responsible and environmentally friendly manner.</p>
            
            <p><font color="green"><b>England & Wales</b></font></p> Waste Carrier Registration: A common format is CBDUXXXXXX (Upper Tier) or CBDLXXXXXX (Lower Tier), where "CBD" likely
            stands for "Carrier, Broker, Dealer" and the "U" or "L" indicates upper or lower tier registration.
            
            <p>All registrations begin with CBD, followed by:

            L = Lower tier
            U = Upper tier
            This is then followed by 6 digits.' </p>
            
            <p><font color="green"><b>Scotland</b></p> Typically starts with WCR
            followed by numbers and potentially letters according to the Scottish Environment Protection Agency (SEPA).</p>  
            
            Current format – WCR/R/1234567

            Previous formats – SCO/123456, SEA/123456, SNO/123456, SWE/123456, WCR/123456

            Proposed format under new regulations (from April 2026) - EAS/R/xxxxxx (xxxxxx being actual numbers).
            
            
            
            <p><font color="green"><b>Northern Ireland</b></p> May
            include a prefix like ROC followed by UT (Upper Tier) or LT (Lower Tier) and then numbers.<p></p>
            
            ROC UT ####

            ROC LT ####

             
          example: 'CBDL123456, CBDU123456'
    acceptance:
      type: object
      properties:
        acceptingAll:
          type: boolean
          description: Is any of the waste rejected? This is a boolean value, i.e true or false.
          example: false
        quantityNotAccepted:
          $ref: '#/components/schemas/weight'
        rejectionReason:
          type: string
          description: What are the reasons why all or part of the waste is rejected.
            <p>Business Rule:</p>
            If  acceptance.acceptingAll is False and no acceptance.rejectionReason is entered, warning given. 
          example: No EWC submitted.
    receiver:
      type: object
      properties:
        authorisations:
          type: array
          items:
            type: object
            properties:
              authorisationNumber:
                type: string
                description: |
                  This is the site's authorisation (permit or exemption) number that allows it to accept waste for intended recovery and disposal operation. Possible values:
                    England - EPR/AB1234CD, NRW - AB309NRW, AB3190ZZ
                example: 'PPC/A/1234567, WML/L/1234567'
        regulatoryPositionStatement:
          type: integer
          description: A regulatory position statement (RPS) is issued when the Environment Agency doesn't require you to have a permit to carry out certain activities that they regulate. The statement will explain which activities you do not require a permit for. This must be a positive integer.
            <p>Business Rule:</p>
            Must be a positive value. 
          
          example: 343
    receipt:
      type: object
      properties:
        dateTimeReceived:
          type: string
          format: date-time
          description: 'This is the date and exact time waste was received at the site. It follows the ISO format - $(date -u +"%Y-%m-%dT%H:%M:%S.000Z")'
          example: '2025-08-11T15:01:47Z'
        disposalOrRecoveryCodes:
          type: array
          items:
            $ref: '#/components/schemas/disposalOrRecoveryCode'
    disposalOrRecoveryCode:
      type: object
      properties:
        code:
          type: string
          description: |
           Disposal recovery code used. More information can be found  here:
           <p>EU Directive Annex I and Annex II define Disposal and Recovery Codes:  https://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2008:312:0003:0030:en:PDF</p> 
            <p>Business rule:</p>
            If disposalOrRecoveryCode.code entered, then it should be in the disposalOrRecoveryCode.code list. Warning returned. 

          example: |
            "code": "R1",
            "weight": 
              "metric": "Tonnes",
              "amount": 2.5,
              "isEstimate": false
        weight:
          $ref: '#/components/schemas/weight'
    weight: 
      type: object
      required:
        - metric
        - amount
        - isEstimate
      properties:
        metric:
          type: string
          enum:
            - Grams
            - Kilograms
            - Tonnes
          description: Unit of measurement in which the waste is being accepted.
            <p>Business Rules:</p>
            If  acceptance.acceptingAll is False and no quantity is entered, warning given.
            <p>Must be “Grams”, “Kilograms”, “Tonnes”. </p>
          example: Tonnes
        amount:
          type: number
          description: Total weight of the waste being accepted in a unit specified below. - Grams - Kilograms - Tonnes 
            <p>Business Rule:</p>
            Must be a positive value. 
          example: 150
        isEstimate:
          type: boolean
          description: Specifies whether the quantity of waste is estimated or actual. This a boolean value, i.e. true or false.
          example: true
    validationResult:
      type: object
      properties:
        key:
          type: string
          example: |
            "statusCode": 201,
            "globalMovementId": "25HRA0B2"
        errorType:
          type: string
          enum:
            - NotProvided
            - TBC
          example: NotProvided
        message:
          type: string
          example: Success
      description: Waste description not successfully stored.
  responses:
    '400':
      description: Input was not in the correct format.
      content:
        application/json:
          schema:
            type: object
            example: |
              {
               "validation": {
                 "errors": [
                    {
                      "key": "waste.0.ewcCodes",
                      "errorType": "NotProvided",
                      "message": "\"waste[0].ewcCodes\" is required"
                     },
                     {
                       "key": "waste.0.wasteDescription",
                       "errorType": "NotProvided",
                       "message": "\"waste[0].wasteDescription\" is required"


                      }
                    }
                 ]
                }
                }
            properties:
              validation:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/validationResult'


